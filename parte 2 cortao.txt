
/*/////////////////// E J E R C I C I O   2 ///////////////////*/
/*/////// Declaracion de conjuntos ///////*/

set Robots;
param Tiempo_objeto{r in Robots};
param Energia_objeto{r in Robots};
param Energia_total{r in Robots};

set Salas;
param Objetos_sala{s in Salas};

param Tiempo_R_Sala{r in Robots, s in Salas};
param Energia_R_Sala{r in Robots, s in Salas};

set Salas_6_Objetos within Salas;las};

set Salas_Oeste within Salas;
set Salas_Este within Salas;

set Salas_5_Objetos within Salas;
set Salas_4_Objetos within Salas;
set Salas_7_Objetos within Salas;
set Salas_3_Objetos within Salas;
set Salas_2_Objetos within Salas;


/*/////// Parametros (constantes) ///////*/
param offset := 10;

/*/////// Variables de Decision ///////*/

var x: {i in Robots, j in Salas}, x >= 0, integer;

/*/////// Restricciones ///////*/

/*///////- 1. No más de un robot en una sala, todas las salas deben tener un robot*/
s.t. rest1B{j in Salas}: sum{i in Robots} x[i, j] = 1;

/*///////- 2. Un robot no puede estar asignado a menos de dos salas*/
s.t. rest2B{i in Robots}: sum{j in Salas} x[i, j] >= 2;

/*///////- 3. Un robot no puede estar asignado a más de tres salas*/
s.t. rest3B{i in Robots}: sum{j in Salas} x[i, j] <= 3;

/*///////- 4. R3, R5, R6 != oeste ///// x2a-j == 0; x4a-j == 0; x5a-j == 0*/
s.t. rest4B: sum{j in Salas_Oeste} x[2, j] + x[4, j] + x[5, j] == 0;

/*///////- 5. R2, R4 != este ////////// x1k-q == 0; x3k-q == 0*/
s.t. rest5B: sum{j in Salas_Este} x[1, j + offset] + x[3, j + offset] == 0;


////////////////////TODO//////////////////////////////

/*///////- 6. No hay robots asignados a C y a EFG..Q Simultaneamente ///// xi2 + xi4-16 <= 1;*/
s.t. rest6B{i in Robots, j in Salas: j >= 4}: x[i, 2] + x[i, j] <= 1;

/*///////- 7. ///// xi3 + xi4-16 <= 1;*/
s.t. rest7B{i in Robots, j in Salas: j >= 4}: x[i, 3] + x[i, j] <= 1;

////////////////////TODO//////////////////////////////

/*///////- 8. Un robot no puede estar en una sala que requiera + energia de la disponible*/

s.t. rest8B{r in Robots}: sum{s in Salas} x[r, s] * Energia_R_Sala[r, s] <= Energia_total[r]; !!!!!!!!!!!!!!!!!!!!!!!!!!

s.t. rest8{i in Robots}: ((sum{j: j <= 2} x[i, j] * 5) + (sum{j: j > 2, j <= 4} x[i, j] * 6) +
						 (sum{j: j > 4, j <= 7} x[i, j] * 4) + (sum{j: j > 7, j <= 9} x[i, j] * 7) +
						 (sum{j: j > 9, j <= 12} x[i, j] * 3) + (sum{j: j > 12, j <= 16} x[i, j] * 2))
						 * Energia_Objeto[i] <= Energia_total[i];

/*///////- 9. TPO >= TPE·1.1*/
s.t. rest9B{r in Robots}: sum{o in Salas_Oeste} x[r, o] * Tiempo_R_Sala[r, o] >= 1.1*sum{e in Salas_Este} x[r, e] * Tiempo_R_Sala[r, e];




/*/////// Funcion Objetivo ///////*/
minimize Tiempo_Espera: sum{r in Robots, s in Salas} x[r, s] * Tiempo_R_Sala[r, s];*/




//////////////////////////////////////////////asd6a54asd65d4a6s54d//////////////////////////////////////////
set Robots := R1, R2, R3, R4, R5, R6, R7, R8;
set Salas := A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q;

set Salas_Oeste := A, B, C, D, E, F, G, H, I, J;
set Salas_Este := K, L, M, N, O, P, Q;


set Salas_5_Objetos = A, B, C;
set Salas_6_Objetos = D, E;
set Salas_4_Objetos = F, G, H;
set Salas_7_Objetos = I, J;
set Salas_3_Objetos = K, L, M;
set Salas_2_Objetos = N, O, P, Q;



/*---- Inicializacion de Parametros ----*/
/* -- Robots */
param Tiempo_objeto :=
R1 4
R2 6
R3 5
R4 3
R5 2
R6 3
R7 4
R8 5;

param Energia_objeto :=
R1 7
R2 5
R3 3
R4 1
R5 2
R6 4
R7 4
R8 5;

param Energia_total :=
R1 100
R2 90
R3 95
R4 40
R5 45
R6 75
R7 85
R8 60;


/* -- Tiempo que tarda cada robot en presentar cada sala */
param Tiempo_R_Sala:	A	B	C 	D 	E 	F 	G 	H 	I 	J	K	L	M	N	O 	P 	Q :=
R1						20	20	20	24	24	16	16	16	28	28	12	12	12	8	8	8	8
R2						30	30	30	36	36	24	24	24	42	42	18	18	18	12	12	12	12
R3						25	25	25	30	30	20	20	20	35	35	15	15	15	10	10	10	10
R4						15	15	15	18	18	12	12	12	21	21	9	9	9	6	6	6	6
R5						10	10	10	12	12	8	8	8	14	14	6	6	6	4	4	4	4
R6						15	15	15	18	18	12	12	12	21	21	9	9	9	6	6	6	6
R7						20	20	20	24	24	16	16	16	28	28	12	12	12	8	8	8	8
R8						25	25	25	30	30	20	20	20	35	35	15	15	15	10	10	10	10;


/* -- Energía que consume cada robot en presentar cada sala */
param Energia_R_Sala:	A	B	C 	D 	E 	F	G	H	I 	J	K	L	M	N	O 	P 	Q :=
R1						35	35	35	42	42	28	28	28	49	49	21	21	21	14	14	14	14
R2						25	25	25	30	30	20	20	20	35	35	15	15	15	10	10	10	10
R3						15	15	15	18	18	12	12	12	21	21	9	9	9	6	6	6	6
R4						5		5		5		6		6	4	4	4	7	7	3	3	3	2	2	2	2
R5						10	10	10	12	12	8	8	8	14	14	6	6	6	4	4	4	4
R6						20	20	20	24	24	16	16	16	28	28	12	12	12	8	8	8	8
R7						20	20	20	24	24	16	16	16	28	28	12	12	12	8	8	8	8
R8						25	25	25	30	30	20	20	20	35	35	15	15	15	10	10	10	10;
